name: Deploy Develop to INT
on:
  push:
    branches:
      - develop
env:
  GITHUB_SHA: ${{ github.sha }}
  GITHUB_REF: ${{ github.ref }}
#  IMAGE: ml_presentation_view_image
#  PROJECT_ID: ${{secrets.DEV_GCLOUD_PROJECT_ID}}
#  REACT_APP_API_VERSION: ${{ secrets.INT_REACT_APP_API_VERSION }}
#  REACT_APP_BASE_URL: ${{ secrets.INT_REACT_APP_BASE_URL }}
#  REACT_APP_POST_LOGOUT_TARGET_URL: ${{ secrets.INT_REACT_APP_POST_LOGOUT_TARGET_URL }}
#  REACT_APP_AGORA_APP_ID: ${{ secrets.INT_REACT_APP_AGORA_APP_ID }}
#  REACT_APP_SF_APP_CLIENT_ID: ${{ secrets.INT_REACT_APP_SF_APP_CLIENT_ID }}
#  REACT_APP_SF_APP_CLIENT_SECRET: ${{ secrets.INT_REACT_APP_SF_CLIENT_SECRET }}
#  REACT_APP_AD_POST_LOGOUT_BASE_URL: ${{ secrets.INT_REACT_APP_AD_POST_LOGOUT_BASE_URL }}
#  REACT_APP_MONGODB_CHARTS_BASE_URL: ${{ secrets.INT_REACT_APP_MONGODB_CHARTS_BASE_URL }}
#  REACT_APP_MONGODB_CHARTS_DASHBOARD_ID: ${{ secrets.INT_REACT_APP_MONGODB_CHARTS_DASHBOARD_ID }}
jobs:
  build:
    name: Perform checks and build on Develop
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [16]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Installs Yarn globally
        run: npm install -g yarn
      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        run: |
          yarn install --frozen-lockfile
          yarn global add serve  # server for production build

        ###############################################################
        #                   Type check & code style                   #
        ###############################################################
      - name: Type check & code style (tslint)
        run: yarn type-check && yarn lint
      - name: Do nextJs cache
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}

        ###############################################################
        #                        Build project                        #
        ###############################################################
      - name: Build production env
        run: yarn build

        ###############################################################
        #                          Run tests                          #
        ###############################################################
      - name: Run unit tests
        run: yarn tests:unit:cov

        ###############################################################
        #                          Upload artifacts                   #
        ###############################################################
      - name: Archive Production Artifact
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build

        ###############################################################
        #                      Upload coverage                        #
        ###############################################################
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage/lcov.info

        ###############################################################
        #                     Deploy                     #
        ###############################################################

  deploy:
    name: Deploy to INT env
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build
      #- name: Deploy to Firebase
      #  uses: w9jds/firebase-action@master
      #  with:
      #    args: deploy --only hosting:INT_ENV
      #  env:
      #    GCP_SA_KEY: ${{ secrets.DEV_SA_KEY }}
